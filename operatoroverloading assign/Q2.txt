//2) class sample
//   {
//	private:
//		char ch;
//	public:
//		sample(char ch)
//		{
//			this->ch=ch;
//		}
//  };
//
//given above class.
//
//write a global function "display" which will access "ch" directly and display it.
//call this function from main function.

#include<iostream>
using namespace std;
class sample
{
private:
	char ch;
public:
	//this is default constructor
	sample()
	{
		cout<<"in def const"<<endl;
	}
	//this is parameterised constructor
	sample(char ch)
	{
		this->ch=ch;
	}
	//this getter method
	int getchar()
	{
		return ch;
	}
	
	//this is destructor
	~sample()
	{
		cout<<"in destructor"<<endl;
	}
	friend void display(sample &);
};
void display(sample &ref)
{
	cout<<ref.ch<<endl;
}
void main()
{
	sample c1('a');
	display(c1);
}

